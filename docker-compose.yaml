---
version: '3'

x-common:
  &common
  build:
    context: ./aero
    dockerfile: Dockerfile
  user: "${AIRFLOW_UID}:0"
  env_file:
    - ./aero/.env
  volumes:
    - ./aero/dags:/opt/airflow/dags
    - ./aero/logs:/opt/airflow/logs
    - ./aero/plugins:/opt/airflow/plugins
    - ./aero/resources:/opt/airflow/resources
  environment:
    PYTHONPATH: "resources:${PYTHONPATH}"

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:

  postgres:
    image: postgres:13.0
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - aero_network

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"
    networks:
      - aero_network

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      - aero_network

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    networks:
      - aero_network

  s3-datalake:
    image: bitnami/minio:2023.7.18
    restart: always
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: s3-datalake-user
      MINIO_ROOT_PASSWORD: s3-datalake-password
      MINIO_DEFAULT_BUCKETS: datalake-bucket
    networks:
      - aero_network

  clickhouse-datamart:
    image: clickhouse/clickhouse-server:latest
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_HOST: 0.0.0.0
      CLICKHOUSE_DB: clickhouse
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    depends_on:
      - s3-datalake
    volumes:
      - ./_modules/clickhouse/docker-entrypoint-initdb.sql:/docker-entrypoint-initdb.d/docker-entrypoint-initdb.sql
    ports:
      - '8123:8123'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://0.0.0.0:8123/ping || exit 1
    restart: always
    networks:
      - aero_network

networks:
  aero_network: