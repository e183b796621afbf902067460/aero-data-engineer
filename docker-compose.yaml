version: "3"

services:

  dagster-dagit:
    build:
      context: ./etl
      dockerfile: Dockerfile
    environment:
      PYTHONPATH: ${PYTHONPATH}:/opt/dagster/app
    ports:
      - '3000:3000'
    env_file:
      - etl/.env
    command: "dagit -w workspace.yaml -h 0.0.0.0 -p 3000"
    depends_on:
      - dagster-postgres
    restart: always
    networks:
      - aero_network

  dagster-daemon:
    build:
      context: ./etl
      dockerfile: Dockerfile
    environment:
      PYTHONPATH: ${PYTHONPATH}:/opt/dagster/app
    env_file:
      - etl/.env
    command: "dagster-daemon run -w workspace.yaml"
    depends_on:
      - dagster-postgres
    restart: always
    networks:
      - aero_network

  dagster-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: dagster-postgres
      POSTGRES_PASSWORD: dagster-postgres
      POSTGRES_DB: dagster-postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "dagster-postgres" ]
      interval: 5s
      retries: 5
    restart: always
    ports:
      - '5433:5432'
    volumes:
      - ./dagster-postgres:/var/lib/postgresql/data
    networks:
      - aero_network

  clickhouse-service:
    command: python3 app/views/view.py
    build:
      context: ./microservices/clickhouse
      dockerfile: Dockerfile
    environment:
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_DB: clickhouse

      PYTHONPATH: ${PYTHONPATH}:/code/app
    depends_on:
      - clickhouse
    networks:
      - aero_network

  postgres-service:
    command: python3 app/views/view.py
    build:
      context: ./microservices/postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - aero_network
    depends_on:
      - postgres

  clickhouse:
    image: clickhouse/clickhouse-server
    environment:
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_HOST: 0.0.0.0
      CLICKHOUSE_DB: clickhouse
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
      - ./clickhouse-data:/var/lib/clickhouse/
    ports:
      - '8124:8123'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://0.0.0.0:8123/ping || exit 1
    restart: always
    networks:
      - aero_network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: 0.0.0.0
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - aero_network
    ports:
      - '5434:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

networks:
  aero_network: